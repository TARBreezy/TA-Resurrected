#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, dish1, dish2, dish3, dish4;

static-var  Static_Var_1;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	Static_Var_1 = 0;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
	start-script SmokeUnit();
}

Activate()
{
	turn dish1 to x-axis <-89.978244> speed <59.985496>;
	turn dish2 to x-axis <89.978244> speed <59.985496>;
	turn dish3 to z-axis <-89.978244> speed <59.985496>;
	turn dish4 to z-axis <89.978244> speed <59.985496>;
	sleep 200;
	set ARMORED to 0;
	Static_Var_1 = 1;
}

Deactivate()
{
	Static_Var_1 = 0;
	set ARMORED to 1;
	turn dish1 to x-axis <0.000000> speed <119.970992>;
	turn dish2 to x-axis <0.000000> speed <119.970992>;
	turn dish3 to z-axis <0.000000> speed <119.970992>;
	turn dish4 to z-axis <0.000000> speed <119.970992>;
}

HitByWeapon(Func_Var_1, Func_Var_2)
{
	if( Static_Var_1 )
	{
		set ACTIVATION to 0;
		sleep 10000;
		if( !Static_Var_1 )
		{
			set ACTIVATION to 1;
		}
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode dish1 type BITMAPONLY | BITMAP2;
		explode dish2 type BITMAPONLY | BITMAP3;
		explode dish3 type BITMAPONLY | BITMAP4;
		explode dish4 type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode dish1 type FALL | BITMAP2;
		explode dish2 type FALL | BITMAP3;
		explode dish3 type FALL | BITMAP4;
		explode dish4 type FALL | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	if( severity <= 99 )
	{
		explode base type BITMAPONLY | BITMAP1;
		explode dish1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode dish2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode dish3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode dish4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		return (0);
	}
	explode base type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode dish1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode dish2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode dish3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode dish4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
}
