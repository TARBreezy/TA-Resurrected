#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, rfirept, lfirept, pelvis, lleg, rleg, rthigh, lthigh,
       luparm, lloarm, rloarm, ruparm, rgun, lgun, ground;

static-var  bMoving, bAiming, Static_Var_3, Static_Var_4, Static_Var_5,
            gun_1, restore_delay;

// Signal definitions
#define SIG_AIM				4


walk()
{
	while( bMoving )
	{
		if( bMoving )
		{
			move pelvis to y-axis [-0.400000] now;
			move rfirept to z-axis [0.000000] now;
			move lfirept to z-axis [0.000000] now;
			move lleg to y-axis [0.000000] now;
			move rleg to y-axis [0.000000] now;
			turn rthigh to x-axis <35.868132> now;
			turn lthigh to x-axis <-35.164835> now;
			turn lleg to x-axis <34.813187> now;
			turn rleg to x-axis <26.373626> now;
			sleep 20;
		}
		if( bMoving )
		{
			move torso to y-axis [-0.150000] now;
			sleep 20;
		}
		if( bMoving )
		{
			move torso to y-axis [-0.300000] now;
			sleep 50;
		}
		if( bMoving )
		{
			move torso to y-axis [-0.150000] now;
			sleep 20;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.300000] now;
			move torso to y-axis [0.000000] now;
			move rleg to y-axis [0.400000] now;
			turn rthigh to x-axis <20.038462> now;
			turn lthigh to x-axis <-30.587912> now;
			turn lleg to x-axis <29.884615> now;
			turn rleg to x-axis <26.725275> now;
			sleep 70;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.200000] now;
			move rleg to y-axis [0.700000] now;
			turn rthigh to x-axis <9.494505> now;
			turn lthigh to x-axis <-23.912088> now;
			turn lleg to x-axis <24.615385> now;
			turn rleg to x-axis <26.725275> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.099994] now;
			turn rthigh to x-axis <-12.302198> now;
			turn lthigh to x-axis <-7.379121> now;
			turn lleg to x-axis <7.384615> now;
			turn rleg to x-axis <26.373626> now;
			sleep 50;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			move rleg to y-axis [0.550000] now;
			turn rthigh to x-axis <-21.098901> now;
			turn lthigh to x-axis <4.571429> now;
			turn lleg to x-axis <16.879121> now;
			turn rleg to x-axis <26.373626> now;
			sleep 40;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.100000] now;
			turn rthigh to x-axis <-28.835165> now;
			turn lthigh to x-axis <15.824176> now;
			sleep 50;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.200000] now;
			turn rthigh to x-axis <-43.604396> now;
			turn lthigh to x-axis <18.637363> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.300000] now;
			turn rthigh to x-axis <-54.153846> now;
			turn lthigh to x-axis <25.670330> now;
			sleep 70;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.400000] now;
			move rleg to y-axis [0.000000] now;
			turn rthigh to x-axis <-35.868132> now;
			turn lthigh to x-axis <28.131868> now;
			turn lleg to x-axis <16.175824> now;
			turn rleg to x-axis <35.868132> now;
			sleep 20;
		}
		if( bMoving )
		{
			move torso to y-axis [-0.150000] now;
			sleep 20;
		}
		if( bMoving )
		{
			move torso to y-axis [-0.300000] now;
			sleep 50;
		}
		if( bMoving )
		{
			move torso to y-axis [-0.150000] now;
			sleep 20;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.300000] now;
			move torso to y-axis [0.000000] now;
			move lleg to y-axis [0.700000] now;
			turn rthigh to x-axis <-27.774725> now;
			turn lthigh to x-axis <21.450549> now;
			turn lleg to x-axis <21.802198> now;
			turn rleg to x-axis <28.131868> now;
			sleep 70;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.200000] now;
			turn rthigh to x-axis <-21.802198> now;
			turn lthigh to x-axis <8.439560> now;
			turn lleg to x-axis <24.258242> now;
			turn rleg to x-axis <22.153846> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.100000] now;
			turn rthigh to x-axis <-16.175824> now;
			turn lthigh to x-axis <-6.675824> now;
			turn rleg to x-axis <16.879121> now;
			sleep 50;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			move lleg to y-axis [0.800000] now;
			turn rthigh to x-axis <-6.675824> now;
			turn lthigh to x-axis <-15.472527> now;
			turn lleg to x-axis <20.395604> now;
			turn rleg to x-axis <25.318681> now;
			sleep 40;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.100000] now;
			turn rthigh to x-axis <2.813187> now;
			turn lthigh to x-axis <-26.021978> now;
			sleep 50;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.200000] now;
			turn rthigh to x-axis <10.197802> now;
			turn lthigh to x-axis <-35.164835> now;
			sleep 60;
		}
		move pelvis to y-axis [-0.300000] now;
		turn rthigh to x-axis <21.450549> now;
		turn lthigh to x-axis <-55.560440> now;
		sleep 70;
	}
}

walklegs()
{
	while( bMoving )
	{
		if( bMoving )
		{
			move pelvis to y-axis [-0.400000] now;
			move rfirept to z-axis [0.000000] now;
			move lfirept to z-axis [0.000000] now;
			move lleg to y-axis [0.000000] now;
			move rleg to y-axis [0.000000] now;
			turn rthigh to x-axis <35.868132> now;
			turn lthigh to x-axis <-35.164835> now;
			turn lleg to x-axis <34.813187> now;
			turn rleg to x-axis <26.373626> now;
			sleep 20;
		}
		if( bMoving )
		{
			sleep 20;
		}
		if( bMoving )
		{
			sleep 50;
		}
		if( bMoving )
		{
			sleep 20;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.300000] now;
			move rleg to y-axis [0.400000] now;
			turn rthigh to x-axis <20.038462> now;
			turn lthigh to x-axis <-30.587912> now;
			turn lleg to x-axis <29.884615> now;
			turn rleg to x-axis <26.725275> now;
			sleep 70;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.200000] now;
			move rleg to y-axis [0.700000] now;
			turn rthigh to x-axis <9.494505> now;
			turn lthigh to x-axis <-23.912088> now;
			turn lleg to x-axis <24.615385> now;
			turn rleg to x-axis <26.725275> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.099994] now;
			turn rthigh to x-axis <-12.302198> now;
			turn lthigh to x-axis <-7.379121> now;
			turn lleg to x-axis <7.384615> now;
			turn rleg to x-axis <26.373626> now;
			sleep 50;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			move rleg to y-axis [0.550000] now;
			turn rthigh to x-axis <-21.098901> now;
			turn lthigh to x-axis <4.571429> now;
			turn lleg to x-axis <16.879121> now;
			turn rleg to x-axis <26.373626> now;
			sleep 40;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.100000] now;
			turn rthigh to x-axis <-28.835165> now;
			turn lthigh to x-axis <15.824176> now;
			sleep 50;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.200000] now;
			turn rthigh to x-axis <-43.604396> now;
			turn lthigh to x-axis <18.637363> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.300000] now;
			turn rthigh to x-axis <-54.153846> now;
			turn lthigh to x-axis <25.670330> now;
			sleep 70;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.400000] now;
			move rleg to y-axis [0.000000] now;
			turn rthigh to x-axis <-35.868132> now;
			turn lthigh to x-axis <28.131868> now;
			turn lleg to x-axis <16.175824> now;
			turn rleg to x-axis <35.868132> now;
			sleep 20;
		}
		if( bMoving )
		{
			sleep 20;
		}
		if( bMoving )
		{
			sleep 50;
		}
		if( bMoving )
		{
			sleep 20;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.300000] now;
			move lleg to y-axis [0.700000] now;
			turn rthigh to x-axis <-27.774725> now;
			turn lthigh to x-axis <21.450549> now;
			turn lleg to x-axis <21.802198> now;
			turn rleg to x-axis <28.131868> now;
			sleep 70;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.200000] now;
			turn rthigh to x-axis <-21.802198> now;
			turn lthigh to x-axis <8.439560> now;
			turn lleg to x-axis <24.258242> now;
			turn rleg to x-axis <22.153846> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.100000] now;
			turn rthigh to x-axis <-16.175824> now;
			turn lthigh to x-axis <-6.675824> now;
			turn rleg to x-axis <16.879121> now;
			sleep 50;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			move lleg to y-axis [0.800000] now;
			turn rthigh to x-axis <-6.675824> now;
			turn lthigh to x-axis <-15.472527> now;
			turn lleg to x-axis <20.395604> now;
			turn rleg to x-axis <25.318681> now;
			sleep 40;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.100000] now;
			turn rthigh to x-axis <2.813187> now;
			turn lthigh to x-axis <-26.021978> now;
			sleep 50;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.200000] now;
			turn rthigh to x-axis <10.197802> now;
			turn lthigh to x-axis <-35.164835> now;
			sleep 60;
		}
		move pelvis to y-axis [-0.300000] now;
		turn rthigh to x-axis <21.450549> now;
		turn lthigh to x-axis <-55.560440> now;
		sleep 70;
	}
}

open()
{
	if( TRUE )
	{
		turn luparm to z-axis <0.000000> now;
		turn luparm to z-axis <-73.494505> speed <212.406593>;
		turn lloarm to z-axis <0.000000> now;
		turn lloarm to z-axis <90.021978> speed <260.175824>;
		turn rloarm to z-axis <0.000000> now;
		turn rloarm to z-axis <-90.021978> speed <260.175824>;
		turn ruparm to z-axis <0.000000> now;
		turn ruparm to z-axis <75.604396> speed <218.505495>;
		sleep 346;
	}
	sleep 354;
}

close()
{
	if( TRUE )
	{
		turn luparm to z-axis <-73.494505> now;
		turn luparm to z-axis <0.000000> speed <66.994505>;
		turn lloarm to z-axis <90.021978> now;
		turn lloarm to z-axis <0.000000> speed <82.060440>;
		turn rloarm to z-axis <-90.021978> now;
		turn rloarm to z-axis <0.000000> speed <82.060440>;
		turn ruparm to z-axis <75.604396> now;
		turn ruparm to z-axis <0.000000> speed <68.917582>;
		sleep 1097;
	}
	sleep 1109;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				move pelvis to y-axis [0.000000] speed [1.000000];
				turn rthigh to x-axis <0.000000> speed <200.043956>;
				turn rleg to x-axis <0.000000> speed <200.043956>;
				turn lthigh to x-axis <0.000000> speed <200.043956>;
				turn lleg to x-axis <0.000000> speed <200.043956>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.021978>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	hide rfirept;
	hide lfirept;
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	Static_Var_4 = 1;
	Static_Var_5 = 0;
	gun_1 = torso;
	restore_delay = 3000;
	start-script MotionControl();
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn torso to y-axis <0.000000> speed <90.021978>;
	set-signal-mask 0;
	Static_Var_5 = 1;
	call-script close();
	sleep 1000;
	Static_Var_4 = 1;
	Static_Var_5 = 0;
	wait-for-turn torso around y-axis;
	bAiming = FALSE;
}

AimPrimary(heading, pitch)
{
	var Func_Var_3;
	Func_Var_3 = 0;
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( ( !Static_Var_3 ) OR Static_Var_5 )
	{
		if( Static_Var_5 )
		{
			Func_Var_3 = 1;
		}
		sleep 100;
	}
	if( Func_Var_3 )
	{
		set-signal-mask 0;
		signal SIG_AIM;
		set-signal-mask SIG_AIM;
	}
	turn torso to y-axis heading speed <275.065934>;
	if( Static_Var_4 )
	{
		set-signal-mask 0;
		Static_Var_5 = 1;
		call-script open();
		Static_Var_4 = 0;
		Static_Var_5 = 0;
		set-signal-mask SIG_AIM;
	}
	wait-for-turn torso around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = rfirept;
	}
	if( gun_1 == 1 )
	{
		piecenum = lfirept;
	}
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		gun_1 = rfirept;
		move rgun to z-axis [-1.500000] speed [25.000000];
		wait-for-move rgun along z-axis;
		move rgun to z-axis [0.000000] speed [0.750000];
		return (0);
	}
	if( gun_1 == 1 )
	{
		gun_1 = torso;
		move lgun to z-axis [-1.500000] speed [25.000000];
		wait-for-move lgun along z-axis;
		move lgun to z-axis [0.000000] speed [0.750000];
	}
}

Killed(severity, corpsetype)
{
	hide rfirept;
	hide lfirept;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode ground type BITMAPONLY | BITMAP1;
		explode lfirept type BITMAPONLY | BITMAP2;
		explode lgun type BITMAPONLY | BITMAP3;
		explode lleg type BITMAPONLY | BITMAP4;
		explode lloarm type BITMAPONLY | BITMAP5;
		explode lthigh type BITMAPONLY | BITMAP1;
		explode luparm type BITMAPONLY | BITMAP2;
		explode pelvis type BITMAPONLY | BITMAP3;
		explode rfirept type BITMAPONLY | BITMAP4;
		explode rgun type BITMAPONLY | BITMAP5;
		explode rleg type BITMAPONLY | BITMAP1;
		explode rloarm type BITMAPONLY | BITMAP2;
		explode rthigh type BITMAPONLY | BITMAP3;
		explode ruparm type BITMAPONLY | BITMAP4;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode ground type FALL | BITMAP1;
		explode lfirept type FALL | BITMAP2;
		explode lgun type FALL | BITMAP3;
		explode lleg type FALL | BITMAP4;
		explode lloarm type FALL | BITMAP5;
		explode lthigh type FALL | BITMAP1;
		explode luparm type FALL | BITMAP2;
		explode pelvis type FALL | BITMAP3;
		explode rfirept type FALL | BITMAP4;
		explode rgun type FALL | BITMAP5;
		explode rleg type FALL | BITMAP1;
		explode rloarm type FALL | BITMAP2;
		explode rthigh type FALL | BITMAP3;
		explode ruparm type FALL | BITMAP4;
		explode torso type SHATTER | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode torso type SHATTER | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode torso type SHATTER | EXPLODE_ON_HIT | BITMAP5;
}
