#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  pelvis, rfirept, lfirept, lcannon, rcannon, locase, lthigh, rthigh,
       torso, rleg, rfoot, lleg, lfoot, upcase2, canbase, ground;

static-var  bMoving, bAiming, Static_Var_3, Static_Var_4, Static_Var_5,
            gun_1, restore_delay;

// Signal definitions
#define SIG_AIM				4


walk()
{
	while( bMoving )
	{
		if( bMoving )
		{
			move pelvis to y-axis [-0.500000] now;
			move lcannon to y-axis [0.000000] now;
			move lcannon to z-axis [0.000000] now;
			move rcannon to y-axis [0.000000] now;
			move rcannon to z-axis [0.000000] now;
			move locase to y-axis [-0.000006] now;
			move rfirept to y-axis [-0.039996] now;
			move rfirept to z-axis [0.219995] now;
			move lfirept to y-axis [-0.039996] now;
			move lfirept to z-axis [0.219995] now;
			turn lthigh to x-axis <-62.945055> now;
			turn rthigh to x-axis <3.516484> now;
			turn torso to z-axis <-4.571429> now;
			turn rleg to x-axis <82.989011> now;
			turn rfoot to x-axis <-36.923077> now;
			turn lleg to x-axis <57.313187> now;
			turn lfoot to x-axis <5.269231> now;
			sleep 70;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.250000] now;
			turn lthigh to x-axis <-51.692308> now;
			turn rthigh to x-axis <-8.082418> now;
			turn torso to z-axis <0.000000> now;
			turn rleg to x-axis <105.846154> now;
			turn rfoot to x-axis <-27.076923> now;
			turn lleg to x-axis <45.357143> now;
			turn lfoot to x-axis <5.972527> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.100000] now;
			turn lthigh to x-axis <-39.384615> now;
			turn rthigh to x-axis <-20.038462> now;
			turn rleg to x-axis <118.857143> now;
			turn lleg to x-axis <38.681319> now;
			turn lfoot to x-axis <1.054945> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			turn lthigh to x-axis <-29.186813> now;
			turn rthigh to x-axis <-30.241758> now;
			turn torso to z-axis <1.752747> now;
			turn rleg to x-axis <72.785714> now;
			turn rfoot to x-axis <-33.758242> now;
			turn lleg to x-axis <29.884615> now;
			turn lfoot to x-axis <-0.703297> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.100000] now;
			turn lthigh to x-axis <-20.395604> now;
			turn rthigh to x-axis <-56.263736> now;
			turn torso to z-axis <7.736264> now;
			turn rleg to x-axis <58.373626> now;
			turn lleg to x-axis <41.137363> now;
			turn lfoot to x-axis <-21.098901> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.250000] now;
			turn lthigh to x-axis <-16.527473> now;
			turn rthigh to x-axis <-57.670330> now;
			turn torso to z-axis <9.846154> now;
			turn rleg to x-axis <-10.197802> now;
			turn lleg to x-axis <59.423077> now;
			turn lfoot to x-axis <-31.648352> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.400000] now;
			turn lthigh to x-axis <-4.571429> now;
			turn rthigh to x-axis <-65.406593> now;
			turn torso to z-axis <10.197802> now;
			turn rleg to x-axis <35.868132> now;
			turn lleg to x-axis <53.450549> now;
			turn lfoot to x-axis <-33.758242> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.500000] now;
			turn lthigh to x-axis <2.813187> now;
			turn rthigh to x-axis <-66.456044> now;
			turn torso to z-axis <7.032967> now;
			turn rleg to x-axis <43.247253> now;
			turn rfoot to x-axis <-7.736264> now;
			turn lleg to x-axis <57.318681> now;
			turn lfoot to x-axis <-29.538462> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.400000] now;
			turn lthigh to x-axis <5.274725> now;
			turn rthigh to x-axis <-61.538462> now;
			turn torso to z-axis <4.923077> now;
			turn rleg to x-axis <44.653846> now;
			turn rfoot to x-axis <16.879121> now;
			turn lleg to x-axis <78.417582> now;
			turn lfoot to x-axis <-34.807692> now;
			sleep 70;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.250000] now;
			turn lthigh to x-axis <-4.923077> now;
			turn rthigh to x-axis <-52.395604> now;
			turn torso to z-axis <0.000000> now;
			turn rleg to x-axis <43.247253> now;
			turn rfoot to x-axis <9.142857> now;
			turn lleg to x-axis <100.571429> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.100000] now;
			turn lthigh to x-axis <-21.450549> now;
			turn rthigh to x-axis <-36.219780> now;
			turn torso to z-axis <0.000000> now;
			turn rfoot to x-axis <-7.032967> now;
			turn lleg to x-axis <103.736264> now;
			turn lfoot to x-axis <-52.747253> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			turn lthigh to x-axis <-32.697802> now;
			turn rthigh to x-axis <-21.802198> now;
			turn torso to z-axis <-8.087912> now;
			turn rleg to x-axis <38.681319> now;
			turn rfoot to x-axis <-13.362637> now;
			turn lleg to x-axis <84.747253> now;
			turn lfoot to x-axis <-45.362637> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.100000] now;
			turn lthigh to x-axis <-68.923077> now;
			turn rthigh to x-axis <-10.901099> now;
			turn torso to z-axis <-10.197802> now;
			turn rleg to x-axis <37.626374> now;
			turn rfoot to x-axis <-21.450549> now;
			turn lleg to x-axis <79.115385> now;
			turn lfoot to x-axis <-37.978022> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.250000] now;
			turn lthigh to x-axis <-61.186813> now;
			turn rthigh to x-axis <3.516484> now;
			turn torso to z-axis <-8.785714> now;
			turn rleg to x-axis <26.368132> now;
			turn rfoot to x-axis <-22.857143> now;
			turn lleg to x-axis <9.846154> now;
			sleep 60;
		}
		move pelvis to y-axis [-0.400000] now;
		turn lthigh to x-axis <-63.296703> now;
		turn rthigh to x-axis <17.230769> now;
		turn torso to z-axis <-7.032967> now;
		turn rleg to x-axis <29.181319> now;
		turn rfoot to x-axis <-21.098901> now;
		turn lleg to x-axis <28.835165> now;
		turn lfoot to x-axis <-1.406593> now;
		sleep 60;
	}
}

walklegs()
{
	while( bMoving )
	{
		if( bMoving )
		{
			move pelvis to y-axis [-0.500000] now;
			move lcannon to y-axis [0.000000] now;
			move lcannon to z-axis [0.000000] now;
			move rcannon to y-axis [0.000000] now;
			move rcannon to z-axis [0.000000] now;
			move locase to y-axis [-0.000006] now;
			move rfirept to y-axis [-0.039996] now;
			move rfirept to z-axis [0.219995] now;
			move lfirept to y-axis [-0.039996] now;
			move lfirept to z-axis [0.219995] now;
			turn lthigh to x-axis <-62.945055> now;
			turn rthigh to x-axis <3.516484> now;
			turn rleg to x-axis <82.989011> now;
			turn rfoot to x-axis <-36.923077> now;
			turn lleg to x-axis <57.313187> now;
			turn lfoot to x-axis <5.269231> now;
			sleep 70;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.250000] now;
			turn lthigh to x-axis <-51.692308> now;
			turn rthigh to x-axis <-8.082418> now;
			turn rleg to x-axis <105.846154> now;
			turn rfoot to x-axis <-27.076923> now;
			turn lleg to x-axis <45.357143> now;
			turn lfoot to x-axis <5.972527> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.100000] now;
			turn lthigh to x-axis <-39.384615> now;
			turn rthigh to x-axis <-20.038462> now;
			turn rleg to x-axis <118.857143> now;
			turn lleg to x-axis <38.681319> now;
			turn lfoot to x-axis <1.054945> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			turn lthigh to x-axis <-29.186813> now;
			turn rthigh to x-axis <-30.241758> now;
			turn rleg to x-axis <72.785714> now;
			turn rfoot to x-axis <-33.758242> now;
			turn lleg to x-axis <29.884615> now;
			turn lfoot to x-axis <-0.703297> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.100000] now;
			turn lthigh to x-axis <-20.395604> now;
			turn rthigh to x-axis <-56.263736> now;
			turn rleg to x-axis <58.373626> now;
			turn lleg to x-axis <41.137363> now;
			turn lfoot to x-axis <-21.098901> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.250000] now;
			turn lthigh to x-axis <-16.527473> now;
			turn rthigh to x-axis <-57.670330> now;
			turn rleg to x-axis <-10.197802> now;
			turn lleg to x-axis <59.423077> now;
			turn lfoot to x-axis <-31.648352> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.400000] now;
			turn lthigh to x-axis <-4.571429> now;
			turn rthigh to x-axis <-65.406593> now;
			turn rleg to x-axis <35.868132> now;
			turn lleg to x-axis <53.450549> now;
			turn lfoot to x-axis <-33.758242> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.500000] now;
			turn lthigh to x-axis <2.813187> now;
			turn rthigh to x-axis <-66.456044> now;
			turn rleg to x-axis <43.247253> now;
			turn rfoot to x-axis <-7.736264> now;
			turn lleg to x-axis <57.318681> now;
			turn lfoot to x-axis <-29.538462> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.400000] now;
			turn lthigh to x-axis <5.274725> now;
			turn rthigh to x-axis <-61.538462> now;
			turn rleg to x-axis <44.653846> now;
			turn rfoot to x-axis <16.879121> now;
			turn lleg to x-axis <78.417582> now;
			turn lfoot to x-axis <-34.807692> now;
			sleep 70;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.250000] now;
			turn lthigh to x-axis <-4.923077> now;
			turn rthigh to x-axis <-52.395604> now;
			turn rleg to x-axis <43.247253> now;
			turn rfoot to x-axis <9.142857> now;
			turn lleg to x-axis <100.571429> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.100000] now;
			turn lthigh to x-axis <-21.450549> now;
			turn rthigh to x-axis <-36.219780> now;
			turn rfoot to x-axis <-7.032967> now;
			turn lleg to x-axis <103.736264> now;
			turn lfoot to x-axis <-52.747253> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			turn lthigh to x-axis <-32.697802> now;
			turn rthigh to x-axis <-21.802198> now;
			turn rleg to x-axis <38.681319> now;
			turn rfoot to x-axis <-13.362637> now;
			turn lleg to x-axis <84.747253> now;
			turn lfoot to x-axis <-45.362637> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.100000] now;
			turn lthigh to x-axis <-68.923077> now;
			turn rthigh to x-axis <-10.901099> now;
			turn rleg to x-axis <37.626374> now;
			turn rfoot to x-axis <-21.450549> now;
			turn lleg to x-axis <79.115385> now;
			turn lfoot to x-axis <-37.978022> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.250000] now;
			turn lthigh to x-axis <-61.186813> now;
			turn rthigh to x-axis <3.516484> now;
			turn rleg to x-axis <26.368132> now;
			turn rfoot to x-axis <-22.857143> now;
			turn lleg to x-axis <9.846154> now;
			sleep 60;
		}
		move pelvis to y-axis [-0.400000] now;
		turn lthigh to x-axis <-63.296703> now;
		turn rthigh to x-axis <17.230769> now;
		turn rleg to x-axis <29.181319> now;
		turn rfoot to x-axis <-21.098901> now;
		turn lleg to x-axis <28.835165> now;
		turn lfoot to x-axis <-1.406593> now;
		sleep 60;
	}
}

open()
{
	if( TRUE )
	{
		move lcannon to y-axis [0.000000] now;
		move lcannon to z-axis [0.000000] now;
		move rcannon to y-axis [0.000000] now;
		move rcannon to z-axis [0.000000] now;
		move locase to y-axis [-0.000006] now;
		move locase to z-axis [0.000000] now;
		move locase to z-axis [-0.749994] speed [1350];		//0.952979	
		move rfirept to y-axis [-0.039996] now;
		move rfirept to z-axis [0.219995] now;
		move lfirept to y-axis [-0.039996] now;
		move lfirept to z-axis [0.219995] now;
		turn upcase2 to x-axis <0.000000> now;
		turn upcase2 to x-axis <-43.950549> speed <1350>;		//55.851648
		turn locase to x-axis <0.000000> now;
		turn locase to x-axis <61.538462> speed <1350>;		//78.192308
		sleep 394;											//787
	}
	if( TRUE )
	{
		move upcase2 to z-axis [-4.399994] speed [1350];		//44.444434
		turn upcase2 to x-axis <-47.120879> speed <1350>;		//31.967033
		sleep 99;
	}
	if( TRUE )
	{
		turn upcase2 to x-axis <-122.021978> speed <1350>;	//687.164835
		sleep 109;
	}
	if( TRUE )
	{
		turn upcase2 to x-axis <-45.714286> speed <1350>;		//451.521978
		sleep 169;
	}
	if( TRUE )
	{
		turn upcase2 to x-axis <-19.692308> speed <1350>;		//377.126374
		sleep 69;
	}
	if( TRUE )
	{
		turn upcase2 to x-axis <-47.120879> speed <3000>;		//1443.604396
		sleep 19;
	}
	sleep 19;
}

close()
{
	if( TRUE )
	{
		move lcannon to y-axis [0.000000] now;
		move lcannon to z-axis [0.000000] now;
		move rcannon to y-axis [0.000000] now;
		move rcannon to z-axis [0.000000] now;
		move upcase2 to z-axis [-4.399994] now;
		move upcase2 to z-axis [0.950000] speed [11.706781];
		move locase to y-axis [-0.000006] now;
		move locase to z-axis [-0.749994] now;
		move rfirept to y-axis [-0.039996] now;
		move rfirept to z-axis [0.219995] now;
		move lfirept to y-axis [-0.039996] now;
		move lfirept to z-axis [0.219995] now;
		turn upcase2 to x-axis <-47.120879> now;
		turn locase to x-axis <61.538462> now;
		sleep 457;
	}
	if( TRUE )
	{
		move upcase2 to z-axis [1.700000] speed [7.009363];
		turn upcase2 to x-axis <-41.142857> speed <55.868132>;
		sleep 107;
	}
	if( TRUE )
	{
		move upcase2 to z-axis [0.000000] speed [100.000183];
		move locase to z-axis [0.000000] speed [44.117517];
		turn upcase2 to x-axis <0.000000> speed <2420.164835>;
		turn locase to x-axis <0.000000> speed <3619.906593>;
		sleep 17;
	}
	sleep 9;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				move pelvis to y-axis [0.000000] speed [1.000000];
				turn rthigh to x-axis <0.000000> speed <200.043956>;
				turn rleg to x-axis <0.000000> speed <200.043956>;
				turn lthigh to x-axis <0.000000> speed <200.043956>;
				turn lleg to x-axis <0.000000> speed <200.043956>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.021978>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	hide rfirept;
	hide lfirept;
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	Static_Var_4 = 1;
	Static_Var_5 = 0;
	dont-shade locase;
	dont-shade lcannon;
	dont-shade rcannon;
	gun_1 = pelvis;
	restore_delay = 8000;	//3000
	start-script MotionControl();
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = pelvis;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn torso to y-axis <0.000000> speed <90.021978>;
	set-signal-mask 0;
	Static_Var_5 = 1;
	call-script close();
	sleep 1000;
	Static_Var_4 = 1;
	Static_Var_5 = 0;
	wait-for-turn torso around y-axis;
	bAiming = FALSE;
}

AimPrimary(heading, pitch)
{
	var Func_Var_3;
	Func_Var_3 = 0;
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( ( !Static_Var_3 ) OR Static_Var_5 )
	{
		if( Static_Var_5 )
		{
			Func_Var_3 = 1;
		}
		sleep 100;
	}
	if( Func_Var_3 )
	{
		set-signal-mask 0;
		signal SIG_AIM;
		set-signal-mask SIG_AIM;
	}
	turn torso to y-axis heading speed <90.021978>;
	wait-for-turn torso around y-axis;
	if( Static_Var_4 )
	{
		set-signal-mask 0;
		Static_Var_5 = 1;
		call-script open();
		sleep 1000;
		Static_Var_4 = 0;
		Static_Var_5 = 0;
		set-signal-mask SIG_AIM;
	}
	start-script RestoreAfterDelay();
	return (1);
}

AimFromPrimary(piecenum)
{
	piecenum = pelvis;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = rfirept;
	}
	if( gun_1 == 1 )
	{
		piecenum = lfirept;
	}
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		gun_1 = rfirept;
		show rfirept;
		move rcannon to z-axis [-2.000000] speed [60.000000];	//25.000000
		sleep 100;
		hide rfirept;
		move rcannon to z-axis [0.000000] speed [4.000000];		//0.750000
		return (0);
	}
	if( gun_1 == 1 )
	{
		gun_1 = pelvis;
		show lfirept;
		move lcannon to z-axis [-2.000000] speed [60.000000];		//25.000000
		sleep 100;
		hide lfirept;
		move lcannon to z-axis [0.000000] speed [4.000000];		//0.750000
	}
}

Killed(severity, corpsetype)
{
	hide rfirept;
	hide lfirept;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode canbase type BITMAPONLY | BITMAP1;
		explode ground type BITMAPONLY | BITMAP2;
		explode lcannon type BITMAPONLY | BITMAP3;
		explode lfirept type BITMAPONLY | BITMAP4;
		explode lfoot type BITMAPONLY | BITMAP5;
		explode lleg type BITMAPONLY | BITMAP1;
		explode locase type BITMAPONLY | BITMAP2;
		explode lthigh type BITMAPONLY | BITMAP3;
		explode pelvis type BITMAPONLY | BITMAP4;
		explode rcannon type BITMAPONLY | BITMAP5;
		explode rfirept type BITMAPONLY | BITMAP2;
		explode rfoot type BITMAPONLY | BITMAP3;
		explode rleg type BITMAPONLY | BITMAP4;
		explode upcase2 type BITMAPONLY | BITMAP5;
		explode rthigh type BITMAPONLY | BITMAP1;
		explode torso type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode canbase type BITMAPONLY | BITMAP1;
		explode ground type FALL | BITMAP2;
		explode lcannon type SHATTER | BITMAP3;
		explode lfirept type FALL | BITMAP4;
		explode lfoot type FALL | BITMAP5;
		explode lleg type FALL | BITMAP1;
		explode locase type FALL | BITMAP2;
		explode lthigh type FALL | BITMAP3;
		explode pelvis type FALL | BITMAP4;
		explode rcannon type SHATTER | BITMAP5;
		explode rfirept type FALL | BITMAP1;
		explode rfoot type FALL | BITMAP2;
		explode rleg type FALL | BITMAP3;
		explode upcase2 type FALL | BITMAP4;
		explode rthigh type FALL | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode canbase type BITMAPONLY | BITMAP1;
		explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lcannon type SHATTER | BITMAP3;
		explode lfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode locase type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rcannon type SHATTER | BITMAP5;
		explode rfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode upcase2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode canbase type BITMAPONLY | BITMAP1;
	explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lcannon type SHATTER | EXPLODE_ON_HIT | BITMAP3;
	explode lfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode locase type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rcannon type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode rfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode upcase2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode torso type BITMAPONLY | BITMAP1;
}
